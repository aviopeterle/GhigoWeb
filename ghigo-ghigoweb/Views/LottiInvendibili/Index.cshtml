@using GridMvc.Html

@{
    ViewBag.Title = "Lotti Invendibili";
}

<br />

@if(!string.IsNullOrEmpty(ViewBag.Cerca)) {
    <text>
    <span style="float: left">
        Contenuto filtrato per '@ViewBag.Cerca' &nbsp;
        @Html.ActionLink("Togli filtro", "Index", "LottiInvendibili", routeValues: null, htmlAttributes: new { @class = "btn small blue" })
    </span>
    </text>
}

<div class="right">
    <form method="get">
        <label for="txtCerca">Cerca</label>
        <input class="small" id="txtCerca" name="cerca" type="text" placeholder="Articolo, parola, barcode" style="width: 200px"/>
        <input type="submit" value="Cerca" />
    </form>
</div>

<div style="font-size: x-small">
@Html.Grid(Model as IQueryable<LottoInvendibile>).Columns(columns =>
{
    columns.Add(foo => foo.CodiceProdotto).Titled("Prodotto").SetWidth(110).Sortable(true);
    columns.Add(foo => foo.Descrizione).Sortable(true).SortInitialDirection(GridMvc.Sorting.GridSortDirection.Ascending);
    columns.Add(foo => foo.DataVendibilita).SetWidth(110).Sortable(true).Format("{0:dd/MM/yyyy}");
    columns.Add(foo => foo.Invendibilita).Sortable(true);
    columns.Add(foo => foo.LottiVendibili).Sortable(true);
    columns.Add(foo => foo.Giacenza).Sortable(true);
    columns.Add(foo => foo.Lotto).Sortable(true);
}).WithPaging(10)
</div>
