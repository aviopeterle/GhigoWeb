@using GhigoWeb.Models
@using System.Reflection
@using System.Collections.Generic

@model ClientePotenziale
@{
    ViewBag.Title = "Modifica Dati";
}

@{
    // cicliamo su tutte le proprietà del modello
    string[] esclusioni = new string[] { "RecId", "CodiceAnagrafica" };
    PropertyInfo[] pis = Model.GetType().GetProperties().Where(p => !esclusioni.Contains(p.Name)).ToArray();
}

<br />
<h5>Modifica/Crea cliente</h5>

<form id="formCliente" style="width: 800px" class="vertical">
    <input type="hidden" name="codiceazienda" value="@ViewBag.CodiceAzienda" />
    <input type="hidden" name="codicefornitore" value="@ViewBag.CodiceFornitore" />
    <input type="hidden" name="codiceanagrafica" value="@ViewBag.CodiceAnagrafica" />
    <input type="hidden" name="clientepotenziale" value="@ViewBag.CliRecId" />
    <fieldset>
        @foreach (var pi in pis)
        {
            if (pi.PropertyType == typeof(string))
            {
            <label for="@("txt" + pi.Name)">@pi.Name</label>
                if (ViewData.Keys.Contains("sel" + pi.Name))
                {
                    var vd = ViewData["sel" + pi.Name] as SelectList;
                    if (vd != null)
                    {
                        @Html.DropDownList(pi.Name, vd)
                        continue;                      
                    }
                }
            <input type="text" id="@("txt" + pi.Name)" name="@pi.Name" value="@pi.GetValue(Model)" />
            }
            else
                if (pi.PropertyType == typeof(DateTime))
                {
                    DateTime dt = (DateTime)pi.GetValue(Model);
            <label for="@("date" + pi.Name)">@pi.Name</label>
            <input type="text" id="@("date" + pi.Name)" name="@pi.Name" value="@(dt.Year == 1 ? DateTime.Now.ToShortDateString() : dt.ToShortDateString())" />
                }
                else
                    if (pi.PropertyType == typeof(int) || pi.PropertyType == typeof(long))
                    {
            <label for="@("int" + pi.Name)">@pi.Name</label>
            <input type="text" id="@("int" + pi.Name)" name="@pi.Name" value="@pi.GetValue(Model)" style="width: 80px" class="right" />
                    }
                    else
                        if (pi.PropertyType == typeof(decimal))
                        {
            <label for="@("dec" + pi.Name)">@pi.Name</label>
            <input type="text" id="@("dec" + pi.Name)" name="@pi.Name" value="@pi.GetValue(Model)" style="width: 80px" class="right" />
                        }
                        else
                            if (pi.PropertyType == typeof(bool))
                            {
            <input type="checkbox" id="@("chk" + pi.Name)" name="@pi.Name" value="@pi.GetValue(Model)" /> @pi.Name
                            }
                            else
                            {
                              @("Tipo non gestito " + pi.PropertyType.ToString())
                            }
        }
    </fieldset>
    <button id="btnModificaClientePotenziale" class="orange">Salva i dati</button>
</form>

@section scripts {
    <script src="~/Scripts/jquery.numeric.js"></script>
    <script type="text/javascript">

        // quando il dom e' pronto
        $(document).ready(function () {

            // toastr in altro a sx
            toastr.options = { positionClass: 'toast-top-left', timeOut: 10000 };

            // numerici
            $("input[id^='int']").numeric({ decimal: false, negative: false });
            $("input[id^='dec']").numeric({ decimal: ',', negative: false });

            // crea fattura
            $("#btnModificaClientePotenziale").click(function (e) {
                e.preventDefault();
                $.post('@Url.Action("ModificaClientePotenziale")',
                    $('#formCliente').serialize(),
                    function (data, success, xhr) {
                        if (data.Successo) {
                            toastr.success(data.Messaggio);
                            setTimeout(function () {
                                document.location.href = '@Url.Action("Proposta")?codiceCliente=' + data.CodiceCliente;
                            }, 1000);
                        } else {
                            toastr.error(data.Messaggio);
                        }
                    }, 'json').fail(function () { toastr.error("Errore nella comunicazione con il server."); });

                return false;
            });
        });

    </script>
}